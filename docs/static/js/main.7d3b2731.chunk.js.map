{"version":3,"sources":["helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/AddCategory.js","GifExpertApp.js","index.js"],"names":["getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","useState","loading","state","setState","useEffect","then","imgs","useFetchGifs","AddCategory","setCategories","inputValue","setInputValue","error","seterror","action","onSubmit","e","preventDefault","trim","length","categorias","type","onChange","target","value","role","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAAaA,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACN,mCACTC,EAFe,uDACN,mCADM,cAEmDC,UACtEH,GAHmB,sBAKFI,MAAMF,GALJ,cAKfG,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZjB,kBAgBdM,GAhBc,4CAAH,sDCiBLO,EAdK,SAAC,GAAwB,IAAtBH,EAAqB,EAArBA,MAAOV,EAAc,EAAdA,IAAc,EAATS,GACjC,OACE,sBAAKK,UAAU,2BAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,EAAOI,UAAU,iBACrC,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,aAAf,SAA6BJ,SAGjC,2BCcSO,EApBC,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECHP,SAACA,GAAe,IAAD,EACfoB,mBAAS,CACjCb,KAAM,GACNc,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAezC,OATAC,qBAAU,WACRzB,EAAQC,GAAWyB,MAAK,SAACC,GACvBH,EAAS,CACPhB,KAAMmB,EACNL,SAAS,SAGZ,CAACrB,IAEGsB,EDTwBK,CAAa3B,GAAhCa,EAHqB,EAG1BN,KAAac,EAHa,EAGbA,QAEpB,OACE,qCACE,oBAAIL,UAAU,oCAAd,SAAmDhB,IAClDqB,GAAW,mBAAGL,UAAU,mCAAb,sBACZ,qBAAKA,UAAU,MAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,a,OEiCjBiB,EA/CK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLT,mBAAS,IADJ,mBAClCU,EADkC,KACtBC,EADsB,OAEfX,oBAAS,GAFM,mBAElCY,EAFkC,KAE3BC,EAF2B,KAmBzC,OACE,mCACE,qBAAKjB,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,uBAAMkB,OAAO,GAAGC,SAhBP,SAACC,GAChBA,EAAEC,iBAEEP,EAAWQ,OAAOC,OAAS,GAC7BN,GAAS,GACTJ,GAAc,SAACW,GAAD,OAAiBV,GAAjB,mBAAgCU,QAE9CP,GAAS,GAEXF,EAAc,KAOR,UACE,qBAAKf,UAAU,aAAf,SACE,uBACEyB,KAAK,OACLzB,UAAU,eACV0B,SAxBY,SAACN,GACzBL,EAAcK,EAAEO,OAAOC,QAwBXA,MAAOd,MAGX,wBAAQd,UAAU,4BAAlB,wBAEF,uBAECgB,EACC,qBAAKhB,UAAU,qBAAqB6B,KAAK,QAAzC,6BAGE,aCVCC,EA7BM,WAAO,IAAD,EACW1B,mBAAS,CAAC,cADrB,mBAClB2B,EADkB,KACNlB,EADM,KAGzB,OACE,qBAAKb,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,iDACA,uBACA,cAAC,EAAD,CAAaa,cAAeA,IAC5B,uBACA,qBAAKb,UAAU,GAAf,SAEE+B,EAAWtC,KAAI,SAACT,GAAD,OAEf,cAAC,EAAD,CAEIA,UAAWA,GADNA,gB,MCfrBgD,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.7d3b2731.chunk.js","sourcesContent":["export const getGifs = async (categoria) => {\r\n  const apiKey = \"wfu303uBB34bk4VkughzIg8ldbIQffHG\";\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURI(\r\n    categoria\r\n  )}&limit=10`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\n\r\nconst GifGridItem = ({ title, url, id }) => {\r\n  return (\r\n    <div className=\"col-md-3 animate__fadeIn\">\r\n      <div className=\"card text-left \">\r\n        <img src={url} alt={title} className=\"card-img-top\" />\r\n        <div className=\"card-body\">\r\n          <div className=\"card-title\">{title}</div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n// import PropTypes from \"prop-types\";\r\n\r\nconst GifGrid = ({ categoria }) => {\r\n\r\n\r\n  const {data:images, loading} = useFetchGifs(categoria);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">Cargando</p>}\r\n      <div className=\"row\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nGifGrid.propTypes = {};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(categoria).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [categoria]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [error, seterror] = useState(false);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 0) {\r\n      seterror(false);\r\n      setCategories((categorias) => [inputValue, ...categorias]);\r\n    } else {\r\n      seterror(true);\r\n    }\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <form action=\"\" onSubmit={onSubmit}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={handleInputChange}\r\n                value={inputValue}\r\n              />\r\n            </div>\r\n            <button className=\"btn btn-block btn-primary\">Agregar</button>\r\n          </form>\r\n          <br />\r\n\r\n          {error ? (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              Agrega un valor\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddCategory;\r\n\r\n","import React, { useState } from \"react\";\r\nimport GifGrid from './components/GifGrid'\r\nimport AddCategory from \"./components/AddCategory\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"One punch\"]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12\">\r\n          <h2>Gif exppert app</h2>\r\n          <hr />\r\n          <AddCategory setCategories={setCategories} />\r\n          <br />\r\n          <div className=\"\">\r\n            {\r\n            categories.map((categoria) =>  (\r\n            \r\n            <GifGrid \r\n                key={categoria} \r\n                categoria={categoria} \r\n            />\r\n            \r\n            ))\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from './GifExpertApp'\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n\n\n"],"sourceRoot":""}